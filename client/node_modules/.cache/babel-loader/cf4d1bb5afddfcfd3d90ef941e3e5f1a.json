{"ast":null,"code":"var _jsxFileName = \"/Users/hutchski/GA-SEI/unit_4/week_12/Striva/client/src/screens/PostDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { getAllComments, postComment } from '../services/comments';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostDetail(props) {\n  _s();\n\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [commentData, setCommentData] = useState({\n    content: ''\n  });\n  const {\n    content\n  } = commentData;\n  const {\n    posts,\n    handleDelete\n  } = props;\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    if (posts.length) {\n      const onePost = posts.find(post => post.id === Number(id));\n      setPost(onePost);\n    }\n  }, [posts, id]);\n  useEffect(() => {\n    const fetchComments = async () => {\n      const commentData = await getAllComments(id);\n      setComments(commentData);\n    };\n\n    fetchComments();\n  }, [id]);\n\n  const handleCreateComment = async commentData => {\n    const newComment = await postComment(commentData);\n    setComments(prevState => [...prevState, newComment]);\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCommentData(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Activity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), post && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.activity_type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.distance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.elevation_gain\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.duration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.activity_photo,\n        alt: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: comment.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/posts\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/posts/${post.id}/edit`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(post.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"create-form\",\n        onSubmit: e => {\n          e.preventDefault();\n          handleCreateComment(commentData);\n          setCommentData({\n            content: ''\n          });\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Add a comment:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            name: \"content\",\n            value: content,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostDetail, \"+CJEnTuW7D+5zydtCl5MzajYFwE=\", false, function () {\n  return [useParams];\n});\n\n_c = PostDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"sources":["/Users/hutchski/GA-SEI/unit_4/week_12/Striva/client/src/screens/PostDetail.jsx"],"names":["React","useState","useEffect","Link","useParams","getAllComments","postComment","PostDetail","props","post","setPost","comments","setComments","commentData","setCommentData","content","posts","handleDelete","id","length","onePost","find","Number","fetchComments","handleCreateComment","newComment","prevState","handleChange","e","name","value","target","title","activity_type","distance","elevation_gain","duration","activity_photo","map","comment","index","user","username","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom'\nimport {getAllComments, postComment} from '../services/comments'\n\nexport default function PostDetail(props) {\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [commentData, setCommentData] = useState({\n    content: ''\n  })\n  const {content} = commentData\n  const { posts, handleDelete } = props;\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (posts.length) {\n      const onePost = posts.find((post) => post.id === Number(id));\n      setPost(onePost)\n    }\n  }, [posts, id])\n\n  useEffect(() => {\n    const fetchComments = async () => {\n      const commentData = await getAllComments(id);\n      setComments(commentData);\n    }\n    fetchComments();\n  }, [id])\n\n  const handleCreateComment = async (commentData) => {\n    const newComment = await postComment(commentData);\n    setComments(prevState => [...prevState, newComment]);\n  }\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setCommentData(prevState => ({\n      ...prevState,\n      [name]: value\n    }))\n  }\n\n\n  return (\n\n    <div className=\"post-details\">\n      <h1>Activity</h1>\n        {\n          post &&\n          <div className=\"card\">\n            <h3>{post.title}</h3>\n            <p>{post.activity_type}</p>\n            <p>{post.distance}</p>\n            <p>{post.elevation_gain}</p>\n            <p>{post.duration}</p>\n          <img src={post.activity_photo} alt={post.title} />\n          <div>\n            {comments.map((comment, index) => (\n              <div key={index}>\n                <div>{comment.content}</div>\n                <div>{comment.user.username}</div>    \n          </div>\n            ))}\n          </div>\n          <br></br>\n            <Link to='/posts'>Back</Link>\n            <Link to={`/posts/${post.id}/edit`}><button>Edit</button></Link>\n          <button onClick={() => handleDelete(post.id)}>Delete</button>\n          <form className=\"create-form\"\n            onSubmit={(e) => {\n            e.preventDefault();\n              handleCreateComment(commentData);\n              setCommentData({content:''})\n            }}>\n            <label>\n              Add a comment:\n              <textarea\n                type='text'\n                name='content'\n                value={content}\n                onChange={handleChange}\n              />\n              \n            </label>\n            <button className=\"submit-button\">Submit</button>\n          </form>\n          </div>\n        }\n      </div>\n\n  )\n}"]},"metadata":{},"sourceType":"module"}