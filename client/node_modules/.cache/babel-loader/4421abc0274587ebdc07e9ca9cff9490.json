{"ast":null,"code":"var _jsxFileName = \"/Users/hutchski/GA-SEI/unit_4/week_12/Striva/client/src/containers/YouContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport { getUsersPost, deletePost, putPost, postPost } from '../services/posts';\nimport YourPosts from '../screens/AllPosts';\nimport CreatePost from '../screens/CreatePost';\nimport EditPost from '../screens/EditPost';\nimport PostDetail from '../screens/PostDetail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function YouContainer() {\n  _s();\n\n  const [allPosts, setAllPosts] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    fetchYourPosts();\n  }, []);\n\n  const fetchYourPosts = async () => {\n    const posts = await getUsersPosts();\n    setAllPosts(posts);\n  };\n\n  const createPost = async postData => {\n    const newPost = await postPost(postData);\n    setAllPosts(prevState => [...prevState, newPost]);\n    history.push('/posts');\n  };\n\n  const updatePost = async (id, postData) => {\n    const updatedPost = await putPost(id, postData);\n    setAllPosts(prevState => prevState.map(post => {\n      return post.id === Number(id) ? updatedPost : post;\n    }));\n    history.push('/posts');\n  };\n\n  const removePost = async id => {\n    await destroyPost(id);\n    setAllPosts(prevState => prevState.filter(post => post.id !== id));\n    history.push('/posts');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts/new\",\n        children: /*#__PURE__*/_jsxDEV(CreatePost, {\n          createPost: createPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts/:id/edit\",\n        children: /*#__PURE__*/_jsxDEV(EditPost, {\n          updatePost: updatePost,\n          allPosts: allPosts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts/:id\",\n        children: /*#__PURE__*/_jsxDEV(PostDetail, {\n          allPosts: allPosts,\n          removePost: removePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts\",\n        children: /*#__PURE__*/_jsxDEV(YourPosts, {\n          allPosts: allPosts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(YouContainer, \"7nuxlWAdXESVv9CtOP4yDOPQ94U=\", false, function () {\n  return [useHistory];\n});\n\n_c = YouContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"YouContainer\");","map":{"version":3,"sources":["/Users/hutchski/GA-SEI/unit_4/week_12/Striva/client/src/containers/YouContainer.jsx"],"names":["React","useState","useEffect","Route","Switch","useHistory","getUsersPost","deletePost","putPost","postPost","YourPosts","CreatePost","EditPost","PostDetail","YouContainer","allPosts","setAllPosts","history","fetchYourPosts","posts","getUsersPosts","createPost","postData","newPost","prevState","push","updatePost","id","updatedPost","map","post","Number","removePost","destroyPost","filter"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport { getUsersPost, deletePost, putPost, postPost } from '../services/posts';\n\nimport YourPosts from '../screens/AllPosts'\nimport CreatePost from '../screens/CreatePost'\nimport EditPost from '../screens/EditPost'\nimport PostDetail from '../screens/PostDetail'\n\n\nexport default function YouContainer() {\n  const [allPosts, setAllPosts] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    fetchYourPosts();\n  }, [])\n\n  const fetchYourPosts = async () => {\n    const posts = await getUsersPosts();\n    setAllPosts(posts);\n  }\n\n  const createPost = async (postData) => {\n    const newPost = await postPost(postData);\n    setAllPosts(prevState => ([\n      ...prevState,\n      newPost\n    ]));\n    history.push('/posts');\n  }\n  const updatePost = async (id, postData) => {\n    const updatedPost = await putPost(id, postData);\n    setAllPosts(prevState => prevState.map(post => {\n        return post.id === Number(id) ? updatedPost : post\n      })\n    )\n    history.push('/posts');\n  }\n\n  const removePost = async (id) => {\n    await destroyPost(id);\n    setAllPosts(prevState => prevState.filter(post => post.id !== id));\n    history.push('/posts');\n  }\n\n\n  return (\n    <>\n      <Switch>\n        <Route path='/posts/new'>\n          <CreatePost\n            createPost={createPost}\n          />\n        </Route>\n        <Route path='/posts/:id/edit'>\n          <EditPost\n            updatePost={updatePost}\n            allPosts={allPosts}\n          />\n        </Route>\n        <Route path='/posts/:id'>\n          <PostDetail\n            allPosts={allPosts}\n            removePost={removePost}\n          />\n        </Route>\n        <Route path='/posts'>\n          <YourPosts\n            allPosts={allPosts}\n          />\n        </Route>\n      </Switch>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}